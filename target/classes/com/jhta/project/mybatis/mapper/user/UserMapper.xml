<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhta.project.mybatis.mapper.user.UserMapper">
	<resultMap type="com.jhta.project.service.security.CustomUserDetail" id="userDetail">
		<id property="userid" column="ui_id"/>
		<result property="password" column="ui_pwd"/>
		<result property="enabled" column="ui_state"/>
		<collection property="authList" ofType="com.jhta.project.vo.security.AuthorityVo">
			<result property="au_id" column="au_id"/>
			<result property="au_authority" column="au_authority"/>
		</collection>
	</resultMap>
	<select id="getAuths" parameterType="String" resultMap="userDetail">
		select * from user_information m, authority a
		where m.ui_id=a.au_id and m.ui_id=#{ui_id}
	</select>
	<!-- 회원가입 -->
	<insert id="userinsert" parameterType="com.jhta.project.vo.user.UserVo">
		insert into user_information values(#{ui_id},#{ui_pwd},#{ui_name},#{ui_email},#{ui_phone},sysdate,1)
	</insert>
	<!-- 시큐리티를 인서트문 -->
	<insert id="addAuth" parameterType="com.jhta.project.vo.security.AuthorityVo">
		insert into authority values(#{au_id},#{au_authority})
	</insert>
	<select id="checkid" parameterType="String" resultType="String">
	 	select * from user_information where ui_id=#{ui_id}
	</select>
	<!-- 로그인 기능 -->
	<select id="selectId" parameterType="com.jhta.project.vo.user.UserVo">
		select * from user_information where ui_id=#{ui_id} and ui_pwd=#{ui_pwd}
	</select>
	<!-- 아이디 찾기 기능 -->
	<select id="searchId" parameterType="com.jhta.project.vo.user.UserVo" resultType="string">
		select * from user_information where ui_name=#{ui_name} and ui_phone=#{ui_phone}
	</select>
	<!-- 임시비밀번호 발급을 위해 아이디 및 이메일 유효성 검사 -->
	<select id="searchPwd" parameterType="com.jhta.project.vo.user.UserVo" resultType="com.jhta.project.vo.user.UserVo">
		select * from user_information where ui_id=#{ui_id} and ui_email=#{ui_email}
	</select>
	<!-- 임시비밀번호 발급 이후 임시비밀번호로 업데이트하기 -->
	<update id="updatePwd" parameterType="com.jhta.project.vo.user.UserVo">
		update user_information  set ui_pwd=#{ui_pwd} where ui_id=#{ui_id} and ui_email=#{ui_email}
	</update>
	<!-- 기본정보만 불러오기 -->
	<select id="selectUser" parameterType="string" resultType="com.jhta.project.vo.user.UserVo">
		select * from user_information u,user_addr a where u.ui_id=a.ui_id and u.ui_id=#{ui_id} and a.ua_nickname='기본배송지'<!--and ui_pwd=#{ui_pwd}  -->
	</select>
	<!-- 기본정보 업데이트하기 -->
	<update id="userupdate" parameterType="com.jhta.project.vo.user.UserVo">
		update user_information set ui_email=#{ui_email}, ui_phone=#{ui_phone}, ui_name=#{ui_name} where ui_id=#{ui_id}
	</update>
	<!-- 회원 탈퇴하기 -->
	<update id="userdelete" parameterType="com.jhta.project.vo.user.UserVo">
		update user_information set ui_state=5 where ui_id=#{ui_id} 
	</update>
	<!-- 회원 비밀번호 변경 -->
	<update id="userpwdupdate" parameterType="com.jhta.project.vo.user.UserVo">
		update user_information set ui_pwd=#{ui_pwd} where ui_id=#{ui_id}
	</update>
	<!-- 지은 test -->
	<select id="test" parameterType="string" resultType="com.jhta.project.vo.user.UserVo">
		select * from user_information where ui_id=#{ui_id}
	</select>
	
	<!--///////////////// 배달내역 관련///////////// -->
	<!-- 내가 주문한 내역 불러오기 -->
	<select id="userdelivery" parameterType="string" resultType="com.jhta.project.vo.user.OrdersVo">
	select * from orders o,orders_detail d,food f, restaurant r where o.or_num=d.or_num and 
	o.ui_id=#{ui_id} and d.food_num=f.food_num and f.r_id=r.r_id and <![CDATA[ o.or_status>='1' and o.or_status<='5']]>
    order by o.or_regdate desc, o.or_status desc    
	</select> 
	<update id="statusupdate" parameterType="com.jhta.project.vo.user.OrdersVo">
		update orders set or_status='6' where ui_id=#{ui_id} and or_num=#{or_num}
	</update>
	<!-- 배달 상태값 받아오기 위한 쿼리 -->
	<select id="selectstatus" parameterType="string" resultType="com.jhta.project.vo.user.OrdersVo">
		select or_status from orders where ui_id=#{ui_id}
	</select>
	<select id="deliverydetail" parameterType="int" resultType="com.jhta.project.vo.user.OrdersVo">
		select * from  orders o,food f,orders_detail d,orders_option p,restaurant r where o.or_num=d.or_num and d.od_num=p.od_num and f.r_id=r.r_id and
         f.food_num=d.food_num  and o.or_num=#{or_num}
	</select>
	<sql id="searchdelivery">
		<if test="field!=null and field!=''">
			and ${field} like '%' || #{keyword} || '%'
		</if>
	</sql>
	<sql id="selectdeliverylist">
	   select o.or_status,f.food_name,r.r_name,o.or_regdate,o.or_num,r.r_img,o.or_totalcost,o.ui_id 
	    from orders o,orders_detail d,food f, restaurant r where o.or_num=d.or_num 
			 	and d.food_num=f.food_num and f.r_id=r.r_id and o.ui_id='${ui_id}'
			 	<![CDATA[  and o.or_status>='1' and o.or_status<='5']]>
	</sql>
	<sql id="selectdeliverycount">
	    orders o,orders_detail d,food f, restaurant r where o.or_num=d.or_num 
			 	and d.food_num=f.food_num and f.r_id=r.r_id and o.ui_id='${ui_id}'
			 	<![CDATA[ and o.or_status>='1' and o.or_status<='5']]>
	</sql>
	<select id="deliverylist" parameterType="hashmap" resultType="com.jhta.project.vo.user.OrdersVo">
		select * from 
		(
			select a.*,rownum rnum
			 from(
			 	<include refid="selectdeliverylist"/>
			 	<include refid="searchdelivery"/>
			 	 order by o.or_regdate desc, o.or_status desc
			 )a
		)
		<![CDATA[where rnum>=${startRow} and rnum<=${endRow} ]]>
	</select>
	<select id="deliverycount" resultType="int" parameterType="hashmap">
		select NVL(count(*),0) cnt from  
		        <include refid="selectdeliverycount"/>
	             <include refid="searchdelivery"/> 
	</select>	
	<!-- 선호분류 인서트 -->
	<insert id="favoritesinsert" parameterType="com.jhta.project.vo.user.FavoritesVo">
		insert into favorites values(#{fa_num},#{ui_id},#{r_id})
	</insert>
</mapper> 




